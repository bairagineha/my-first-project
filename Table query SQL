
select * 
from merchant
inner join merchant_category
on merchant.id = merchant_category.id;
==========
use fraud_detection;
select * from transaction;
select * from merchant;
select * from merchant_category;
select * from credit_card;
select * from card_holder;
==============
use fraud_detection
select id, id_merchant, card , avg(amount) as average_amount from transaction group by  id, id_merchant, card 
order by average_amount DESC ;
===============
select id, id_merchant, card , avg(amount) as average from transaction 
group by  id, id_merchant, card having average<=5;
==============
select * 
from merchant
inner join merchant_category
on merchant.id = merchant_category.id;

=============================
select f.*, m.name , m.id_merchant_category 
from fraud_detection.transaction as f
join fraud_detection.merchant as m 
on f.id_merchant = m.id order by id_merchant;

==================================
select  cc.card, cch.* 
from fraud_detection.credit_card as cc
join fraud_detection.card_holder as cch
on cc.id_card_holder = cch.id order by id;
=======================================
-- select f.*, m.name , m.id_merchant_category ,--
-- avg(f.amount) as average_amount
-- join fraud_detection.merchant as m 
-- group by f.id,f.date,f.amount,f.card,f.id_merchant, m.name , m.id_merchant_category
-- order by average_amount desc;
==========================
select f.*, m.name , m.id_merchant_category ,
 sum(f.amount) as total_amount 
from fraud_detection.transaction as f
join fraud_detection.merchant as m 
on f.id_merchant = m.id  
group by  f.id,f.date,f.amount,f.card,f.id_merchant, m.name , m.id_merchant_category
order by total_amount desc;
=========================

